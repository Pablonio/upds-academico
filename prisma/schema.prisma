generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Carrera {
  id       Int        @id @default(autoincrement())
  nombre   String     @unique
  semestre Semestre[]
  usuario  Usuario[]
}

model Semestre {
  id          Int       @id @default(autoincrement())
  nroSemestre Int
  idCarrera   Int?
  materia     Materia[]
  carrera     Carrera?  @relation(fields: [idCarrera], references: [id])
}

model Profesion {
  id      Int       @id @default(autoincrement())
  nombre  String    @unique
  usuario Usuario[]
}

model Usuario {
  id              Int               @id @default(autoincrement())
  codigoUsuario   String            @unique
  nombre          String
  apellidos       String
  ci              String            @unique
  correo          String            @unique
  contrasena      String
  fechaNacimiento DateTime
  rol             String            @default("ESTUDIANTE")
  idProfesion     Int?
  idCarrera       Int?
  registroMateria RegistroMateria[]
  solicitud       Solicitud[]
  carrera         Carrera?          @relation(fields: [idCarrera], references: [id])
  profesion       Profesion?        @relation(fields: [idProfesion], references: [id])
}

model MateriasRequeridas {
  id        Int     @id @default(autoincrement())
  nombre    String
  idMateria Int
  materia   Materia @relation(fields: [idMateria], references: [id])
}

model RegistroMateria {
  id        Int     @id @default(autoincrement())
  nombre    String
  idMateria Int
  idAula    Int
  idUsuario Int
  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  aula      Aula    @relation(fields: [idAula], references: [id])
  materia   Materia @relation(fields: [idMateria], references: [id])
}

model Materia {
  id                 Int                  @id @default(autoincrement())
  codigoMateria      String               @unique
  nombre             String               @unique
  fechaInicioMateria DateTime
  fechaFinMateria    DateTime
  idSemestre         Int?
  aula               Aula[]
  semestre           Semestre?            @relation(fields: [idSemestre], references: [id])
  materiasRequeridas MateriasRequeridas[]
  registroMateria    RegistroMateria[]
  solicitud          Solicitud[]
}

model Aula {
  id              Int               @id @default(autoincrement())
  codigoAula      String            @unique
  numeroAula      Int
  piso            Int
  idTurnoManana   Int?
  idTurnoTarde    Int?
  idTurnoNoche    Int?
  idMateria       Int?
  materia         Materia?          @relation(fields: [idMateria], references: [id])
  turnoNoche      TurnoNoche?       @relation(fields: [idTurnoNoche], references: [id])
  turnoTarde      TurnoTarde?       @relation(fields: [idTurnoTarde], references: [id])
  turnoManana     TurnoManana?      @relation(fields: [idTurnoManana], references: [id])
  registroMateria RegistroMateria[]
}

model TurnoManana {
  id          Int    @id @default(autoincrement())
  horaIngreso String @default("08:00 - 11:00")
  aula        Aula[]
}

model TurnoTarde {
  id          Int    @id @default(autoincrement())
  horaIngreso String @default("15:00 - 18:00")
  aula        Aula[]
}

model TurnoNoche {
  id          Int    @id @default(autoincrement())
  horaIngreso String @default("19:00 - 22:00")
  aula        Aula[]
}

model Solicitud {
  id          Int      @id @default(autoincrement())
  idUsuario   Int
  idMateria   Int
  estado      String   @default("PENDIENTE")
  fecha       DateTime @default(now())
  comprobante String?
  materia     Materia  @relation(fields: [idMateria], references: [id])
  usuario     Usuario  @relation(fields: [idUsuario], references: [id])
}
